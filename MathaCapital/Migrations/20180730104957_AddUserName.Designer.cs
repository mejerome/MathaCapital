// <auto-generated />
using System;
using MathaCapital.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MathaCapital.Migrations
{
    [DbContext(typeof(AuctionContext))]
    [Migration("20180730104957_AddUserName")]
    partial class AddUserName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MathaCapital.Areas.Identity.Data.MathaCapitalUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("MathaCapitalUser");
                });

            modelBuilder.Entity("MathaCapital.Models.AuctionBid", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankName");

                    b.Property<string>("BatchRef");

                    b.Property<decimal>("CouponAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FwdDate");

                    b.Property<double>("FwdRate");

                    b.Property<decimal>("Pips")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("AuctionBid");
                });

            modelBuilder.Entity("MathaCapital.Models.BankPercent", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName");

                    b.Property<int?>("BankPercViewModelID");

                    b.Property<string>("Percent");

                    b.HasKey("ID");

                    b.HasIndex("BankPercViewModelID");

                    b.ToTable("BankPercent");
                });

            modelBuilder.Entity("MathaCapital.Models.BankPercViewModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bidBatch");

                    b.HasKey("ID");

                    b.ToTable("BankPercViewModel");
                });

            modelBuilder.Entity("MathaCapital.Models.WinResults", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AuctionBidID");

                    b.Property<string>("BankName");

                    b.Property<string>("BatchRef");

                    b.Property<decimal>("CouponAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FwdDate");

                    b.Property<double>("FwdRate");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.Property<decimal>("WinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AuctionBidID");

                    b.HasIndex("UserId");

                    b.ToTable("WinResult");
                });

            modelBuilder.Entity("MathaCapital.Models.AuctionBid", b =>
                {
                    b.HasOne("MathaCapital.Areas.Identity.Data.MathaCapitalUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MathaCapital.Models.BankPercent", b =>
                {
                    b.HasOne("MathaCapital.Models.BankPercViewModel")
                        .WithMany("perbank")
                        .HasForeignKey("BankPercViewModelID");
                });

            modelBuilder.Entity("MathaCapital.Models.WinResults", b =>
                {
                    b.HasOne("MathaCapital.Models.AuctionBid", "AuctionBid")
                        .WithMany()
                        .HasForeignKey("AuctionBidID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MathaCapital.Areas.Identity.Data.MathaCapitalUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
